プログラム概要
　プログラムのポイントでアルファベットを出力する方法でデバッグをするためのデバッガーです。
　デバッグするソースコードに決まったポインタを書き込み、そのポインタをアルファベットの出力命令に書き換えます。

対応言語：Java

プログラムの実行方法
※　jdkをインストールする必要があります。

windowsの場合ーコマンドプロンプト
1.Debuger.javaの文字コードを変更
2.Debuger.javaのあるフォルダに移動
3.クラスファイルを作成する場合は、「javac Debuger.java」でコンパイル後、「java Debuger」で実行
		クラスファイルを作成しない場合は、「java Debuger.java」で実行a

Linuxの場合ーターミナル
1.Debuger.java・Debuger.classのあるディレクトリに移動
2.「java Debuger」で実行


プログラムの利用方法
ソースコードにはポインタを置く必要があります。
　ポインタの書式
		//dnまたは//Dn
		nは01~から52の数字, 01~09は1~9に0をつけて２桁にしてください
		//d01と//D01は同じアルファベットに対応しています。
		アルファベットはdまたはDの後ろの数字によって決まります。

		01　→　A
		02　→　B
		26　→　Z
		27　→　a
		52　→　z

・モード選択
1.デバック準備ープログラムをデバッグするときに利用します。
	デバッグ準備をするソースコードを選択します。
	ポインタ「//D01」をアルファベット出力命令「System.out.println("A");」に変換します。
	「デバック準備の処理を終了しました」と表示されたらデバッグ準備が終了しています。
	デバック準備をしたプログラムを実行し、デバッグをします。

2.デバッグ中断ー作成中のプログラムが、正常に動作するかを確認するときに利用します。
	デバッグ中断をするソースコードを選択します。
	アルファベット出力命令「System.out.println("A");」をポインタ「//D01」に変換します。
	「デバック中断の処理を終了しました」と表示されたらデバッグ中断が終了しています。

3.デバック終了ープログラムが完成し、デバッグを終了するときに利用します。
	デバッグ終了をするソースコードを選択します。
	アルファベット出力命令「System.out.println("A");」とポインタ「//D01」のどちらもを削除します。
